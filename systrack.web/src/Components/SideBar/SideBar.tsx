import React from 'react';
import { Link, useLocation } from 'react-router-dom';
import { useEffect, useState } from 'react';
import * as signalR from "@microsoft/signalr";

const navSections = [
    {
        sectionTitle: "SysTrack",
        sectionTitleSize: "text-[2.4vw]",
        navLinks: [
            {
                linkName: "Dashboard",
                href: "/",
                icon:
                    (
                        <svg xmlns="http://www.w3.org/2000/svg" height="1.4vw" viewBox="0 -960 960 960" width="1.4vw" fill="rgb(0,0,0)">
                            <path d="M520-600v-240h320v240H520ZM120-440v-400h320v400H120Zm400 320v-400h320v400H520Zm-400 0v-240h320v240H120Zm80-400h160v-240H200v240Zm400 320h160v-240H600v240Zm0-480h160v-80H600v80ZM200-200h160v-80H200v80Zm160-320Zm240-160Zm0 240ZM360-280Z" />
                        </svg>
                    )
            },

            {
                linkName: "Connections",
                href: "/Connections",
                icon:
                    (
                        <svg xmlns="http://www.w3.org/2000/svg" height="1.4vw" viewBox="0 -960 960 960" width="1.4vw" fill="rgb(0,0,0)">
                            <path d="M720-360v-80h80q17 0 28.5 11.5T840-400q0 17-11.5 28.5T800-360h-80Zm0 160v-80h80q17 0 28.5 11.5T840-240q0 17-11.5 28.5T800-200h-80Zm-160 40q-33 0-56.5-23.5T480-240h-80v-160h80q0-33 23.5-56.5T560-480h120v320H560ZM280-280q-66 0-113-47t-47-113q0-66 47-113t113-47h60q25 0 42.5-17.5T400-660q0-25-17.5-42.5T340-720H200q-17 0-28.5-11.5T160-760q0-17 11.5-28.5T200-800h140q58 0 99 41t41 99q0 58-41 99t-99 41h-60q-33 0-56.5 23.5T200-440q0 33 23.5 56.5T280-360h80v80h-80Z" />
                        </svg>
                    )
            },

            {
                linkName: "Profile",
                href: "/Profile",
                icon:
                    (
                        <svg xmlns="http://www.w3.org/2000/svg" height="1.4vw" viewBox="0 -960 960 960" width="1.4vw" fill="rgb(0,0,0)">
                            <path d="M200-246q54-53 125.5-83.5T480-360q83 0 154.5 30.5T760-246v-514H200v514Zm280-194q58 0 99-41t41-99q0-58-41-99t-99-41q-58 0-99 41t-41 99q0 58 41 99t99 41ZM200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h560q33 0 56.5 23.5T840-760v560q0 33-23.5 56.5T760-120H200Zm69-80h422q-44-39-99.5-59.5T480-280q-56 0-112.5 20.5T269-200Zm211-320q-25 0-42.5-17.5T420-580q0-25 17.5-42.5T480-640q25 0 42.5 17.5T540-580q0 25-17.5 42.5T480-520Zm0 17Z" />
                        </svg>
                    )
            },
        ]

    },

    {
        sectionTitle: "Integrations",
        sectionTitleSize: "text-[1.4vw]",
        navLinks: [
            {
                linkName: "Discord",
                href: "/",
                icon:
                    (
                        <svg width="1.4vw" height="1.4vw" viewBox="0 0 24 24" role="img" xmlns="http://www.w3.org/2000/svg">
                            <path d="M20.317 4.37a19.791 19.791 0 0 0-4.885-1.515.074.074 0 0 0-.079.037c-.21.375-.444.864-.608 1.25a18.27 18.27 0 0 0-5.487 0 12.64 12.64 0 0 0-.617-1.25.077.077 0 0 0-.079-.037A19.736 19.736 0 0 0 3.677 4.37a.07.07 0 0 0-.032.027C.533 9.046-.32 13.58.099 18.057a.082.082 0 0 0 .031.057 19.9 19.9 0 0 0 5.993 3.03.078.078 0 0 0 .084-.028 14.09 14.09 0 0 0 1.226-1.994.076.076 0 0 0-.041-.106 13.107 13.107 0 0 1-1.872-.892.077.077 0 0 1-.008-.128 10.2 10.2 0 0 0 .372-.292.074.074 0 0 1 .077-.01c3.928 1.793 8.18 1.793 12.062 0a.074.074 0 0 1 .078.01c.12.098.246.198.373.292a.077.077 0 0 1-.006.127 12.299 12.299 0 0 1-1.873.892.077.077 0 0 0-.041.107c.36.698.772 1.362 1.225 1.993a.076.076 0 0 0 .084.028 19.839 19.839 0 0 0 6.002-3.03.077.077 0 0 0 .032-.054c.5-5.177-.838-9.674-3.549-13.66a.061.061 0 0 0-.031-.03zM8.02 15.33c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.956-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.956 2.418-2.157 2.418zm7.975 0c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.955-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.946 2.418-2.157 2.418z" />
                        </svg>
                    )
            },

            {
                linkName: "Telegram",
                href: "/",
                icon:
                    (
                        < svg width="1.4vw" height="1.4vw" viewBox = "0 0 48 48" fill = "none" xmlns = "http://www.w3.org/2000/svg" >
                            <path d="M41.4193 7.30899C41.4193 7.30899 45.3046 5.79399 44.9808 9.47328C44.8729 10.9883 43.9016 16.2908 43.1461 22.0262L40.5559 39.0159C40.5559 39.0159 40.3401 41.5048 38.3974 41.9377C36.4547 42.3705 33.5408 40.4227 33.0011 39.9898C32.5694 39.6652 24.9068 34.7955 22.2086 32.4148C21.4531 31.7655 20.5897 30.4669 22.3165 28.9519L33.6487 18.1305C34.9438 16.8319 36.2389 13.8019 30.8426 17.4812L15.7331 27.7616C15.7331 27.7616 14.0063 28.8437 10.7686 27.8698L3.75342 25.7055C3.75342 25.7055 1.16321 24.0823 5.58815 22.459C16.3807 17.3729 29.6555 12.1786 41.4193 7.30899Z" fill="#000000" />
                        </svg >
                    )
            },
        ]
    }

]

const SideBar: React.FC = () => {
    const location = useLocation();
    const [currentUser, setCurrentUser] = useState<string | null>(null);

    useEffect(() => {
        const savedUser = localStorage.getItem("currentUser");
        if (savedUser) {
            setCurrentUser(savedUser);
        }
    }, []);

    const userName = currentUser ? (currentUser.substring(0, currentUser.indexOf('@'))) : (null);

    
    const [metrics, setMetrics] = useState<any>(null);

    useEffect(() => {
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("http://localhost:5265/hub", {
                withCredentials: true,
            })
            .withAutomaticReconnect()
            .build();

        connection.start()
            .then(() => {
                console.log("🔌 Joined to hub");
                return connection.invoke("JoinGroup", "TestGroup", true); 
            })
            .then(() => {
                console.log("📡 Client joined group");
            })
            .catch(err => console.error("❌ Error:", err));

        connection.on("ReceiveMetrics", (data) => {
            console.log("📥 Metrics received:", data);
            setMetrics(data); 
        });

        return () => {
            connection.stop();
        };
    }, []);  
    

    return (
        <div className="flex flex-col w-[15vw] h-[100%] justify-center items-center gap-[1vw]">
            <div className="stats-container flex justify-center items-center font-Kanit text-[0.8vw] w-[100%] h-[12vw] bg-[rgb(200,200,200)] rounded-[1vw] border-[0.2vw] border-[rgb(180,180,180)]">
                <div>
                    <h2>Live Metrics</h2>
                    {metrics ? (
                        <ul>
                            <li><strong>CPU:</strong> {metrics.cpuUsage}%</li>
                            <li><strong>GPU:</strong> {metrics.gpuUsage}%</li>
                            <li><strong>Agent:</strong> {metrics.name}</li>
                        </ul>
                    ) : (
                        <p>Waiting for data...</p>
                    )}
                </div>
            </div>

            <div className="navbar flex flex-col bg-[rgb(255,255,255)] w-[100%] h-[100%] rounded-[1vw] p-[10px] gap-[32px]">
                {navSections.map((section) => (
                    <div className="links flex flex-col items-center gap-[0.4vw]">
                        <p className={`${section.sectionTitleSize} font-Kanit`}>{section.sectionTitle}</p>
                        {section.navLinks.map((link) => (
                            <Link to={link.href} className="flex justify-start items-center gap-[0.4vw] w-[90%] p-[0.4vw] rounded-[0.2vw] hover:bg-[rgb(220,220,220)]">
                                <div className="flex justify-center items-center">
                                    {link.icon}
                                </div>
                                <p className="flex text-[1.1vw] text-[0.8vw] font-Kanit leading-none">{link.linkName}</p>
                            </Link>
                        ))}
                    </div>
                ))}
            </div>




            <div className="account-container flex gap-[0.2vw] justify-start items-center w-[100%] h-[3vw]">
                
                <div className="bg-black rounded-[0.4vw]">
                    <svg width="3vw" height="" viewBox="0 0 24 24" fill="rgb(0,0,0)" xmlns="http://www.w3.org/2000/svg">
                        <path d="M8 7C8 5 10 3 12 3C14 3 16 5 16 7C16 9 14 11 12 11C10 11 8 9 8 7Z" fill="white" />
                        <path d="M12 12.25C9.99998 12.25 9 11 8 11C7 11 5.47796 12.25 4.17352 17.25C3.38259 20.2817 5.47797 21 6.78235 21H12H17.2177C18.5221 21 20.5439 20 19.8265 17.25C18.5221 12.25 17 11 16 11C15 11 14 12.25 12 12.25Z" fill="white" />
                    </svg>
                </div>
                <div className="flex flex-col items-start font-Kanit leading-none bg-white rounded-[0.4vw] p-[0.4vw] h-[3vw] w-[100%]">
                    <p className="text-[0.8vw]">{userName ? (userName) : (null)}</p>
                    <a className="text-[rgb(160,160,160)] text-[0.68vw] hover:underline" href="/profile">View profile</a>
                </div>
                

                <div className="bg-white rounded-[0.4vw] p-[0.1vw]">
                    <svg width="1.4vw" height="1.4vw" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M5.33333 18.6666H8.89936C9.5516 18.6666 9.87772 18.6666 10.1846 18.7404C10.4567 18.8057 10.7168 18.9134 10.9554 19.0596C11.2245 19.2245 11.4551 19.4552 11.9163 19.9164L12.0836 20.0836C12.5449 20.5448 12.7755 20.7754 13.0446 20.9404C13.2832 21.0865 13.5433 21.1942 13.8153 21.2596C14.1223 21.3333 14.4484 21.3333 15.1007 21.3333H16.8993C17.5516 21.3333 17.8777 21.3333 18.1847 21.2596C18.4567 21.1942 18.7168 21.0865 18.9555 20.9404C19.2245 20.7754 19.4552 20.5448 19.9164 20.0836L20.0836 19.9164C20.5448 19.4552 20.7755 19.2245 21.0445 19.0596C21.2832 18.9134 21.5433 18.8057 21.8153 18.7404C22.1223 18.6666 22.4484 18.6666 23.1007 18.6666H26.6667M9.59999 5.33331H22.4C23.8935 5.33331 24.6403 5.33331 25.2107 5.62397C25.7124 5.87962 26.1204 6.28757 26.376 6.78934C26.6667 7.35977 26.6667 8.1065 26.6667 9.59998V22.4C26.6667 23.8934 26.6667 24.6402 26.376 25.2106C26.1204 25.7124 25.7124 26.1204 25.2107 26.376C24.6403 26.6666 23.8935 26.6666 22.4 26.6666H9.59999C8.10653 26.6666 7.35978 26.6666 6.78936 26.376C6.28758 26.1204 5.87963 25.7124 5.62398 25.2106C5.33333 24.6402 5.33333 23.8934 5.33333 22.4V9.59998C5.33333 8.10651 5.33333 7.35977 5.62398 6.78934C5.87963 6.28757 6.28758 5.87962 6.78936 5.62397C7.35978 5.33331 8.10653 5.33331 9.59999 5.33331Z" stroke="black" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                    </svg>
                    <svg width="1.4vw" height="1.4vw" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <g clip-path="url(#clip0_22_111)">
                            <path d="M27 16.76V16V15.23L28.92 13.55C29.2739 13.2381 29.5062 12.8111 29.5757 12.3444C29.6452 11.8778 29.5476 11.4016 29.3 11L26.94 7.00004C26.7646 6.6963 26.5125 6.44402 26.2088 6.2685C25.9052 6.09298 25.5607 6.0004 25.21 6.00004C24.9926 5.99838 24.7765 6.03215 24.57 6.10004L22.14 6.92004C21.7205 6.64125 21.2828 6.39069 20.83 6.17004L20.32 3.65004C20.2285 3.18965 19.9781 2.77608 19.6124 2.48174C19.2468 2.1874 18.7893 2.03105 18.32 2.04004H13.64C13.1707 2.03105 12.7132 2.1874 12.3475 2.48174C11.9819 2.77608 11.7314 3.18965 11.64 3.65004L11.13 6.17004C10.6739 6.39064 10.233 6.64119 9.80999 6.92004L7.42999 6.06004C7.22129 6.00566 7.00517 5.9854 6.78999 6.00004C6.43927 6.0004 6.0948 6.09298 5.79116 6.2685C5.48751 6.44402 5.23536 6.6963 5.05999 7.00004L2.69999 11C2.46658 11.401 2.37984 11.8707 2.45464 12.3286C2.52944 12.7865 2.76112 13.2042 3.10999 13.51L4.99999 15.24V16V16.77L3.10999 18.45C2.75126 18.758 2.51325 19.1832 2.43819 19.65C2.36313 20.1168 2.45589 20.5951 2.69999 21L5.05999 25C5.23536 25.3038 5.48751 25.5561 5.79116 25.7316C6.0948 25.9071 6.43927 25.9997 6.78999 26C7.00734 26.0017 7.22351 25.9679 7.42999 25.9L9.85999 25.08C10.2795 25.3588 10.7172 25.6094 11.17 25.83L11.68 28.35C11.7714 28.8104 12.0219 29.224 12.3875 29.5183C12.7532 29.8127 13.2107 29.969 13.68 29.96H18.4C18.8693 29.969 19.3268 29.8127 19.6924 29.5183C20.0581 29.224 20.3085 28.8104 20.4 28.35L20.91 25.83C21.3661 25.6094 21.807 25.3589 22.23 25.08L24.65 25.9C24.8565 25.9679 25.0726 26.0017 25.29 26C25.6407 25.9997 25.9852 25.9071 26.2888 25.7316C26.5925 25.5561 26.8446 25.3038 27.02 25L29.3 21C29.5334 20.5991 29.6201 20.1294 29.5453 19.6715C29.4705 19.2136 29.2389 18.7959 28.89 18.49L27 16.76ZM25.21 24L21.78 22.84C20.9771 23.5201 20.0594 24.0518 19.07 24.41L18.36 28H13.64L12.93 24.45C11.9484 24.0816 11.0357 23.5509 10.23 22.88L6.78999 24L4.42999 20L7.14999 17.6C6.96509 16.5649 6.96509 15.5052 7.14999 14.47L4.42999 12L6.78999 8.00004L10.22 9.16004C11.0229 8.47993 11.9406 7.94829 12.93 7.59004L13.64 4.00004H18.36L19.07 7.55004C20.0516 7.91846 20.9643 8.44918 21.77 9.12004L25.21 8.00004L27.57 12L24.85 14.4C25.0349 15.4352 25.0349 16.4949 24.85 17.53L27.57 20L25.21 24Z" fill="black" />
                            <path d="M16 22C14.8133 22 13.6533 21.6481 12.6666 20.9888C11.6799 20.3295 10.9109 19.3925 10.4567 18.2961C10.0026 17.1997 9.88378 15.9933 10.1153 14.8295C10.3468 13.6656 10.9182 12.5965 11.7574 11.7574C12.5965 10.9182 13.6656 10.3468 14.8295 10.1153C15.9933 9.88378 17.1997 10.0026 18.2961 10.4567C19.3925 10.9109 20.3295 11.6799 20.9888 12.6666C21.6481 13.6533 22 14.8133 22 16C22.008 16.7902 21.8583 17.574 21.5596 18.3056C21.2609 19.0371 20.8193 19.7018 20.2605 20.2605C19.7018 20.8193 19.0371 21.2609 18.3056 21.5596C17.574 21.8583 16.7902 22.008 16 22ZM16 12C15.4713 11.9877 14.9457 12.0827 14.4548 12.2794C13.9639 12.4761 13.5181 12.7702 13.1442 13.1442C12.7702 13.5181 12.4761 13.9639 12.2794 14.4548C12.0827 14.9457 11.9877 15.4713 12 16C11.9877 16.5287 12.0827 17.0543 12.2794 17.5452C12.4761 18.0361 12.7702 18.4819 13.1442 18.8559C13.5181 19.2298 13.9639 19.524 14.4548 19.7206C14.9457 19.9173 15.4713 20.0123 16 20C16.5287 20.0123 17.0543 19.9173 17.5452 19.7206C18.0361 19.524 18.4819 19.2298 18.8559 18.8559C19.2298 18.4819 19.524 18.0361 19.7206 17.5452C19.9173 17.0543 20.0123 16.5287 20 16C20.0123 15.4713 19.9173 14.9457 19.7206 14.4548C19.524 13.9639 19.2298 13.5181 18.8559 13.1442C18.4819 12.7702 18.0361 12.4761 17.5452 12.2794C17.0543 12.0827 16.5287 11.9877 16 12Z" fill="black" />
                        </g>
                        <defs>
                            <clipPath id="clip0_22_111">
                                <rect width="32" height="32" fill="white" />
                            </clipPath>
                        </defs>
                    </svg>

                </div>
            </div>
        </div>
    )
}

export default SideBar;